<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Always in the direction of the sea!]]></title>
  <subtitle><![CDATA[Stay hungry,stay foolish!]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://wangang.github.io/"/>
  <updated>2014-08-16T14:44:06.675Z</updated>
  <id>http://wangang.github.io/</id>
  
  <author>
    <name><![CDATA[Wan Gang]]></name>
    <email><![CDATA[wangang006@gmail.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Python GUI编程]]></title>
    <link href="http://wangang.github.io/2014/08/16/Python-GUI%E7%BC%96%E7%A8%8B/"/>
    <id>http://wangang.github.io/2014/08/16/Python-GUI编程/</id>
    <published>2014-08-16T07:11:57.000Z</published>
    <updated>2014-08-16T11:00:14.000Z</updated>
    <content type="html"><![CDATA[<ul>
<li>首先我们看一个简单的例子：</li>
</ul>
<figure class="highlight Python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> Tkinter <span class="keyword">import</span> *</div><div class="line">root = Tk()</div><div class="line">w = Lable(root, text = <span class="string">'Hello wrold'</span>)</div><div class="line">w.pack()</div><div class="line">root.mainloop()</div></pre></td></tr></table></figure>

<ul>
<li>我们首先导入Tkinter模块，它包括我们需要的类和函数以及其它的内容。利用第一句既可以简单的导入Tkinter所有到你的模块空间。接下来实例化一个Tk，它是一个很普通windows界面，有一个标题栏以及一些其它的描述。你在每一个程序里面只可以创建一个，而且它是必须首先创建的紧接着我们创建了一个作为root子类的Label。接着调用Pack方法，这就使Lable能够使适应text，而且能够被看到。但是我们必须输入事件循环中。当程序进入事件循环中，直到我们关闭窗口。这些意味着当进入主循环中时，Windows应用窗口即可出现。</li>
<li>当你写一个很大的程序时，将你的代码做成一个或者多个类，下面这个例子就是将程序作为类。</li>
</ul>
<figure class="highlight Python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> Tkinter <span class="keyword">import</span> *</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, master)</span>:</span></div><div class="line">        frame = Frame(master)</div><div class="line">        frame.pack()</div><div class="line">        </div><div class="line">        self.button = Button(frame, text=<span class="string">'quit'</span>, fg=<span class="string">'red'</span>,command=frame.quit)</div><div class="line">        self.button.pack(side = LEFT)</div><div class="line">        self.hi_there = Button(frame, text=<span class="string">'Hello'</span>, command=self.say_hi)</div><div class="line">        self.hi_there.pack(side=LEFT)</div><div class="line">        </div><div class="line">        <span class="function"><span class="keyword">def</span> <span class="title">say_hi</span><span class="params">(self)</span>:</span></div><div class="line">            <span class="keyword">print</span> <span class="string">'hi there,everyone'</span></div><div class="line">            </div><div class="line">root = Tk()</div><div class="line">app = App(root)</div><div class="line">root.mainloop()</div></pre></td></tr></table></figure>

<ul>
<li><a href="http://effbot.org/tkinterbook/" target="_blank" rel="external">参考文档</a></li>
</ul>
]]></content>
    
    
      <category term="Python" scheme="http://wangang.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[python类的学习]]></title>
    <link href="http://wangang.github.io/2014/08/16/python%E7%B1%BB%E7%9A%84%E5%AD%A6%E4%B9%A0/"/>
    <id>http://wangang.github.io/2014/08/16/python类的学习/</id>
    <published>2014-08-16T04:13:54.000Z</published>
    <updated>2014-08-16T13:06:50.000Z</updated>
    <content type="html"><![CDATA[<ul>
<li>在Python创建一个简单类如下：</li>
</ul>
<figure class="highlight Python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span> <span class="comment">#创建类</span></div><div class="line">	<span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age)</span>:</span> <span class="comment">#创建构造函数</span></div><div class="line">		self.name = name</div><div class="line">		self.age = age</div><div class="line">	<span class="function"><span class="keyword">def</span> <span class="title">say</span><span class="params">(self)</span>:</span> <span class="comment">#创建函数</span></div><div class="line">		<span class="keyword">print</span> <span class="string">'Hello everyone!My name is %s,I am %d years old!'</span>%(self.name,self.age)</div><div class="line">		</div><div class="line">man = person(<span class="string">'wan'</span>, <span class="number">24</span>) <span class="comment">#进行实例化</span></div><div class="line">man.say()</div></pre></td></tr></table></figure>

<ul>
<li>我们使用class语句后跟类名，创建了一个新的类Person。在用类定义成对象时，会先调用<strong>init</strong>构造函数，以初始化对象的各属性。如该程序中的name与age。类的各个属性均可以在构造函数中定义，定义时只要加上对象指针就好了。创建类的函数say，实例化一个student，后面调用函数。</li>
<li>Python类可以继承父类属性，形式为class类名(父类)，子类可以继承父类的所有方法和属性，也可以重载父类的成员函数及属性。</li>
</ul>
<figure class="highlight Python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(Person)</span>:</span> <span class="comment">#继承类Person</span></div><div class="line">	<span class="function"><span class="keyword">def</span> <span class="title">grade</span><span class="params">(self,name,age, grade)</span>:</span></div><div class="line">        self.name = name</div><div class="line">        self.age = age</div><div class="line">		self.grade = grade</div><div class="line">	<span class="function"><span class="keyword">def</span> <span class="title">say</span><span class="params">(self)</span>:</span> <span class="comment">#子类重载函数</span></div><div class="line">		<span class="keyword">print</span> <span class="string">'Hello everyone!My name is %s, I am %d years old!My grades are %d.'</span>%(self.name, self.age, self.grade)</div><div class="line">		</div><div class="line">aStudent = Student(<span class="string">'wan'</span>, <span class="number">24</span>, <span class="number">90</span>)</div><div class="line">aStudent.say()</div></pre></td></tr></table></figure>

]]></content>
    
    
      <category term="Python" scheme="http://wangang.github.io/tags/Python/"/>
    
  </entry>
  
</feed>
